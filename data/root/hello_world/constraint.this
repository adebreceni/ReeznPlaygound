{"content":"// create a RUN-TIME function that takes a positive integer\nclass int = i32\n\nval f =\n   (in: {args: {n: int}}, p: `in.args.n > 0` & true)=>in\n\nclass Function[Arg, ReturnType]{}\n\nclass Expr[T] = T match {\n\tcase Function[arg, ret] => {\n\t\tdef call(_arg: Expr[arg]): `FunctionCall(this, _arg)`\n\t}\n\tcase 'i32 => {}\n}\n\nclass FunctionCall[Arg, ReturnType] = Expr[ReturnType]{\n\tfn: Expr[Function[Arg, ReturnType]]\n\targs: Expr[Arg]\n}\n\nclass Var[T] = Expr[T]{}\n\ntype X = Expr[Function[i32, i32]]\n\ndef main(fn: Var[Function[i32, i32]], arg: Var[i32]) = {\n\tval result = fn.call(arg)\n}","test_result":{"errors":[],"annotations":[]}}