{"content":"package A{\n\tpackage B{\n\t\tclass Option{}\n\n\t\tval F(x: i32) = 4\n\t}\n}\n\npackage A{\n\tval z: i32 = 5\n\n\tpackage B{\n\t\tval [x: f64, x] = [1,2]\n\t}\n}\n\ndef f(): i32 = {\n\tval a = A.B.x + A.z;\n\tval b = A.B.Option\n}","test_result":{"errors":[{"range":{"start":{"row":4,"column":6},"end":{"row":4,"column":7}},"message":"Type of expression couldn't be inferred"},{"range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"message":"Couldn't find member \"+\""}],"annotations":[{"position":{"row":12,"column":25},"segments":[{"value":"."},{"value":"0"},{"value":": "},{"value":"1","error":"Not assignable to f64"}]},{"position":{"row":19,"column":1},"segments":[{"value":": "},{"value":"`__BlockExpression.ToValueImpl is unimplemented__`","error":"Not assignable to i32"}]},{"position":{"row":17,"column":6},"segments":[{"value":": "},{"value":"Any"}]},{"position":{"row":18,"column":6},"segments":[{"value":": "},{"value":"`"},{"value":"*ErrorValue*"},{"value":".B"},{"value":".Option"},{"value":"`"},{"value":" (yielding) "},{"value":"("},{"value":")=>"},{"value":"A"},{"value":"."},{"value":"B"},{"value":"."},{"value":"Option"}]}]}}