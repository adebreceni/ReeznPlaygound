{"content":"class A{}\nclass B = A{}\nclass C = B{}\nclass D = D{}\n\nclass X{\n\t// no extension can assume more than being of type C\n\ta: B >: C\n\tb: B >: C\n\tc: B >: C\n\td: B >: C\n}\n\ntype E = {a: A, b: B, c: C, d: D}\n\nclass Y = X{\n\ta: A // error: base assumption failed\n\tb: B\n\tc: C\n\td: D // error: extension cannot assume more than being C\n\t// casting to X and then extending that with some d: C would break \n}\n\nclass Z = X with E\n\n// every method of every superclass of \"a.type\" \n// expects AT MOST that @a is of type \"A\"\ndef f(a: {a >: A}, b: {a >: B}, c: {a >: C}, d: {a >: D}) = 0\n\ndef main(x: X) = {\n\tf(x, x, x, x)\n}","test_result":{"errors":[],"annotations":[]}}